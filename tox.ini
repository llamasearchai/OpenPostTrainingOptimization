[tox]
min_version = 4.0
envlist =
    py310-{linux,macos}
    py311-{linux,macos}
    py312-{linux,macos}
    lint
    type
    security
    coverage
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run tests with pytest
platform =
    linux: linux
    macos: darwin
deps =
    pytest>=8.2
    pytest-asyncio>=0.23
    pytest-cov>=5.0
    pytest-xdist>=3.6
    pytest-timeout>=2.3
    hypothesis>=6.100
passenv =
    HOME
    USER
    CI
    GITHUB_*
set_env =
    PYTHONPATH = {toxinidir}/src
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
commands =
    pytest -n auto --cov=openposttraining --cov-report=term-missing --cov-report=xml:{toxworkdir}/coverage-{envname}.xml {posargs:tests}

[testenv:lint]
description = Run linters (ruff, black, isort)
skip_install = false
deps =
    ruff>=0.6
    black>=24.0
    isort>=5.13
commands =
    ruff check src tests
    black --check src tests
    isort --check-only src tests

[testenv:format]
description = Format code with ruff, black, and isort
skip_install = false
deps =
    ruff>=0.6
    black>=24.0
    isort>=5.13
commands =
    ruff format src tests
    black src tests
    isort src tests

[testenv:type]
description = Run type checking with mypy
skip_install = false
deps =
    mypy>=1.8
    types-pyyaml
    types-requests
commands =
    mypy src

[testenv:security]
description = Run security checks with bandit
skip_install = false
deps =
    bandit>=1.7
commands =
    bandit -r src -ll

[testenv:coverage]
description = Combine coverage from all test environments
skip_install = true
deps =
    coverage[toml]>=7.0
set_env =
    COVERAGE_FILE = {toxworkdir}/.coverage
commands =
    coverage combine {toxworkdir}/.coverage.*
    coverage report --fail-under=100
    coverage html -d {toxworkdir}/htmlcov
    coverage xml -o {toxworkdir}/coverage.xml

[testenv:dev]
description = Development environment with all tools
deps =
    pytest>=8.2
    pytest-asyncio>=0.23
    pytest-cov>=5.0
    pytest-xdist>=3.6
    pytest-benchmark>=4.0
    ruff>=0.6
    mypy>=1.8
    black>=24.0
    isort>=5.13
    bandit>=1.7
    hypothesis>=6.100
commands =
    {posargs:pytest}

[testenv:docs]
description = Build documentation
skip_install = false
deps =
    mkdocs>=1.5
    mkdocs-material>=9.5
commands =
    mkdocs build

[testenv:clean]
description = Clean up temporary files
skip_install = true
allowlist_externals =
    rm
    find
commands =
    rm -rf {toxworkdir}
    rm -rf .pytest_cache
    rm -rf .mypy_cache
    rm -rf .ruff_cache
    rm -rf htmlcov
    rm -rf .coverage*
    find . -type d -name __pycache__ -exec rm -rf {} +
    find . -type f -name '*.py[co]' -delete

